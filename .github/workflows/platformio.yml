name: PlatformIO CI

on:
  push:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache PlatformIO
        uses: actions/cache@v3
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-platformio-${{ hashFiles('**/platformio.ini') }}
          restore-keys: |
            ${{ runner.os }}-platformio-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install platformio

      - name: Build
        run: pio run

      - name: Add Build Status Badge
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 46292c13ab8c70e68aa9619cad1d9560
          filename: esp32-homekit-SmartRoom-build.json
          label: build
          message: ${{ job.status }}
          color: ${{ job.status == 'success' && 'success' || 'critical' }}

      - name: Check OTA Size
        run: |
          MAX_OTA_SIZE=1310720  # 1.25MB in bytes for ESP32's OTA partition
          BINARY_SIZE=$(stat -f %z .pio/build/esp32doit-devkit-v1/firmware.bin || stat -c %s .pio/build/esp32doit-devkit-v1/firmware.bin)
          echo "Binary size: $BINARY_SIZE bytes"
          echo "Maximum OTA size: $MAX_OTA_SIZE bytes"
          if [ "$BINARY_SIZE" -gt "$MAX_OTA_SIZE" ]; then
            echo "OTA_STATUS=exceeded" >> $GITHUB_ENV
            echo "Binary size ($BINARY_SIZE bytes) exceeds OTA limit ($MAX_OTA_SIZE bytes)"
            exit 1
          else
            PERCENT_USED=$((BINARY_SIZE * 100 / MAX_OTA_SIZE))
            echo "OTA_STATUS=ready ($PERCENT_USED% used)" >> $GITHUB_ENV
          fi

      - name: Add OTA Status Badge
        if: always()
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 46292c13ab8c70e68aa9619cad1d9560
          filename: esp32-homekit-ota.json
          label: OTA
          message: ${{ env.OTA_STATUS }}
          color: ${{ contains(env.OTA_STATUS, 'exceeded') && 'critical' || 'success' }}
